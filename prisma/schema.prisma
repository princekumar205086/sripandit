datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_PRISMA_URL") 
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

generator client {
  provider = "prisma-client-js"
}

enum Role {
  USER
  ADMIN
}

model User {
  id                        Int      @id @default(autoincrement())
  username                  String
  email                     String   @unique
  contact                   String?
  password                  String
  date_of_reg               DateTime @default(now())
  account_status            String   @default("0")
  verifyToken               String?  @db.VarChar(255)
  verifyTokenExpiry         DateTime?
  forgotPasswordToken       String?  @db.VarChar(255)
  forgotPasswordTokenExpiry DateTime?
  changePasswordToken       String? @db.VarChar(255)
  chabgePasswordTokenExpiry DateTime?
  role                      Role     @default(USER)
}

model PujaService {
  id             Int          @id @default(autoincrement())
  title          String
  img            String
  desc           String       @db.VarChar(10000) 
  category       PujaCategory @relation(fields: [categoryId], references: [id])
  categoryId     Int
  date_of_create DateTime     @default(now())
  packages       Package[]    @relation("PujaServicePackages")
}

model PujaCategory {
  id        Int          @id @default(autoincrement())
  name      String       @unique
  services  PujaService[]
}

model Package {
  id             Int          @id @default(autoincrement())
  location       String
  language       String
  type           String
  price          Float
  description    String       @db.VarChar(10000)
  pujaService    PujaService  @relation(fields: [pujaServiceId], references: [id], name: "PujaServicePackages")
  pujaServiceId  Int
}

model PujaBooking {
  id             Int      @id @default(autoincrement())
  city           String
  pujaName       String
  language       String
  date           DateTime
  time           String
  location       String
  contactNumber  String
  email          String  
}

model AstrologyService {
  id            Int      @id @default(autoincrement())
  service_title String
  service_image String   // Added attribute for service image
  service_type  String
  service_price Float
  service_desc  String    @db.VarChar(5000)
  timestamp     DateTime  @default(now())
}

model AstrologyBooking {
  id              Int      @id @default(autoincrement())
  language        String
  preferredDate   DateTime
  preferredTime   DateTime
  birthPlace      String
  birthDate       DateTime
  birthTime       DateTime
  gender          String
  questions       String?  // Optional field for questions
  createdAt       DateTime  @default(now())
}